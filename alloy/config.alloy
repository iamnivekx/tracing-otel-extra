///////////////////////////////////////////////////////////////////////////////
// Configuration file
// https://github.com/grafana/loki/blob/main/examples/getting-started/alloy-local-config.yaml
// https://github.com/grafana/intro-to-mltp/blob/main/alloy/config.alloy
local.file_match "tmp" {
  path_targets = [
    {"__path__" = "/app/logs/articles/*.log", "app" = "articles"},
    {"__path__" = "/app/logs/demo/*.log", "app" = "demo"},
    {"__path__" = "/app/logs/users/*.log", "app" = "users"},
  ]
  sync_period  = "1s"
}

// Log file source
loki.source.file "files"  {
  targets    = local.file_match.tmp.targets
  forward_to = [loki.process.extract_tracing_fields.receiver]
  tail_from_end = true
}

// Log processing pipeline to extract request_id and trace_id
loki.process "extract_tracing_fields" {
  forward_to = [loki.write.to_loki.receiver]

  // Parse JSON log format - extract from spans array if it exists
  stage.json {
    expressions = {
      "trace_id" = "span.trace_id",
    }
  }

  // Extract fields as labels, but only if they exist
  stage.labels {
    values = {
      trace_id = "",
    }
  }
}

loki.write "to_loki" {
  endpoint {
		url = string.format(
			"http://%s/loki/api/v1/push",
			coalesce(sys.env("LOKI_HOST"), "localhost:3100"),
		)
	}
  external_labels = {
    app = "{{ .app }}",
  }
}